[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cue"
version = "0.0.1"
description = "A description of package."
authors = [{ name = "Cue", email = "hello@example.com" }]
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "anthropic==0.43.1",
    "openai==1.59.6",
    "tiktoken>=0.8.0",
    "google-auth==2.37.0",
    "google-auth-oauthlib==1.2.1",
    "google-api-python-client==2.158.0",
    "requests==2.32.3",
    "python-dotenv==1.0.0",
    "pydantic==2.10.1",
    "pydantic-settings==2.7.1",
    "sqlalchemy==2.0.30",
    "psycopg2-binary==2.9.9",
    "greenlet>=3.1.1",
    "asyncpg==0.29.0",
    "rich==13.9.4",
    "blobfile==2.1.1",
    "bs4==0.0.1",
    "duckduckgo-search==6.1.12",
    "pypdf==4.3.1",
    "docker>=7.1",
    "tqdm>=4.66.5",
    "aiohttp==3.11.6",
    "websockets>=14.1",
    "tenacity>=9.0.0",
    "psutil>=6.1.0",
    "mcp==1.2.0",
    "claude-code-sdk>=0.0.16",
]

[project.optional-dependencies]
dev = [
    "pyright>=1.1.370",
    "mypy>=1.10.1",
    "ruff>=0.9.0",
    "pytest",
    "pytest-asyncio>=0.24.0",
]

[project.scripts]
cue = "cue.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--tb=short"
xfail_strict = true
asyncio_mode = "auto"
filterwarnings = ["error"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
line-length = 120
output-format = "grouped"
target-version = "py39"
exclude = ["alembic"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "I",  # isort
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "UP006", # keep for agent
    "UP035", # keep for agent
    "UP045", # disable `X | None`
]

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
known-first-party = ["cue", "tests", "environment", "evals"]

# Configure setuptools to include package data
[tool.setuptools]
packages = { find = { where = ["src"] } }

# Specify package data using setuptools
[tool.setuptools.package-data]
"cue" = ["tools/*.json"]
